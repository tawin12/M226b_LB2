var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/BoardComponent.html",[0,1.045,1,1.515]],["body/components/BoardComponent.html",[0,0.938,1,2.339,2,1.672,3,0.247,4,0.199,5,1.001,6,1.001,7,1.001,8,1.001,9,0.199,10,0.779,11,1.361,12,2.515,13,1.001,14,1.001,15,2.153,16,1.957,17,2.804,18,1.672,19,2.153,20,1.672,21,1.672,22,0.155,23,0.607,24,2.153,25,2.153,26,1.361,27,1.675,28,2.153,29,2.153,30,1.085,31,2.88,32,2.153,33,2.153,34,2.153,35,1.675,36,2.796,37,2.153,38,2.153,39,0.874,40,1.672,41,2.515,42,1.589,43,2.515,44,2.796,45,2.515,46,2.515,47,2.515,48,2.515,49,2.515,50,2.515,51,3.022,52,2.515,53,1.672,54,1.672,55,0.779,56,1.001,57,1.462,58,1.957,59,1.462,60,1.348,61,1.001,62,1.672,63,1.672,64,0.874,65,0.074,66,1.096,67,0.647,68,0.874,69,2.153,70,1.001,71,2.153,72,1.001,73,2.153,74,1.001,75,1.672,76,1.02,77,1.001,78,0.729,79,0.745,80,2.153,81,0.618,82,2.019,83,2.88,84,1.001,85,1.001,86,1.001,87,1.001,88,2.351,89,1.001,90,1.001,91,1.001,92,1.001,93,1.672,94,1.675,95,1.001,96,1.001,97,1.001,98,1.001,99,1.001,100,2.796,101,1.672,102,1.672,103,1.315,104,3.022,105,1.001,106,1.672,107,1.001,108,1.589,109,1.001,110,1.001,111,1.001,112,1.001,113,1.001,114,1.001,115,1.001,116,1.672,117,2.22,118,1.278,119,1.58,120,1.315,121,0.913,122,1.672,123,2.153,124,1.464,125,1.315,126,2.153,127,1.672,128,1.672,129,1.001,130,1.218,131,1.001,132,1.001,133,1.001,134,1.001,135,1.001,136,1.001,137,1.001,138,1.218,139,1.001,140,1.001,141,0.524,142,0.413,143,1.165,144,0.531,145,0.364,146,0.247,147,0.247,148,0.247,149,0.782,150,0.436,151,0.633,152,1.001,153,1.001,154,0.413,155,0.077,156,1.672,157,1.672,158,2.153,159,2.515,160,1.001,161,1.001,162,2.153,163,1.001,164,1.672,165,1.001,166,1.001,167,1.589,168,1.001,169,1.001,170,1.001,171,2.153,172,2.515,173,2.515,174,1.001,175,2.153,176,1.672,177,1.001,178,0.633,179,1.001,180,1.001,181,1.001,182,1.672,183,1.001,184,1.001,185,1.001,186,1.001,187,2.153,188,1.301,189,1.001,190,1.001,191,1.672,192,1.672,193,1.001,194,1.001,195,1.001,196,1.001,197,1.001,198,1.001,199,1.001,200,1.001,201,1.001,202,1.672,203,1.001,204,1.001,205,0.531,206,0.364,207,1.001,208,1.001,209,1.001,210,1.001,211,2.515,212,1.001,213,1.001,214,1.672,215,2.153,216,2.153,217,1.672,218,1.672,219,2.153,220,1.001,221,1.672,222,1.001,223,1.001,224,1.001,225,1.001,226,1.001,227,1.672,228,1.672,229,1.001,230,1.001,231,2.515,232,2.153,233,1.001,234,1.001,235,1.672,236,1.001,237,2.153,238,1.001,239,1.057,240,1.001,241,1.672,242,1.672,243,1.001,244,1.096,245,1.001,246,1.001,247,1.672,248,0.779,249,1.001,250,1.001,251,1.001,252,1.001,253,1.001,254,1.672,255,1.057,256,1.361,257,1.001,258,1.001,259,1.001,260,1.001,261,1.001,262,1.001,263,1.001,264,2.153,265,1.001,266,1.001,267,1.001,268,0.436,269,1.001,270,1.001,271,1.001,272,1.001,273,1.001,274,1.001,275,2.153,276,1.001,277,1.001,278,1.001,279,1.001,280,1.001,281,1.001,282,1.001,283,1.001,284,1.001,285,1.001,286,1.001,287,1.001,288,1.001,289,1.001,290,1.001,291,1.001,292,0.301,293,0.524,294,1.001,295,1.001,296,1.001,297,1.001,298,0.436,299,1.001,300,1.001,301,1.001,302,1.001,303,1.001,304,1.001,305,1.001,306,1.001,307,1.001,308,0.874,309,1.001,310,2.153,311,1.001,312,0.436,313,1.672,314,1.001,315,1.001,316,1.057,317,1.672,318,0.524,319,1.672,320,1.315,321,1.672,322,1.001,323,1.001,324,1.672,325,1.672,326,1.001,327,2.515,328,1.001,329,1.001,330,1.001,331,0.015,332,0.025,333,0.015]],["title/interfaces/ITetromino.html",[118,0.722,334,1.045]],["body/interfaces/ITetromino.html",[3,0.639,4,0.514,9,0.514,11,1.637,22,0.401,23,1.245,26,1.637,42,1.637,65,0.073,67,0.633,76,1.17,79,0.845,81,0.633,108,2.166,118,1.231,119,2.366,120,1.354,121,1.078,124,1.995,125,1.354,130,1.128,138,1.128,146,0.639,147,0.639,150,1.128,154,0.845,155,0.119,178,1.637,205,0.845,244,1.128,255,2.166,256,1.637,292,0.78,316,2.688,331,0.038,332,0.05,333,0.038,334,1.128,335,2.59,336,1.637,337,3.309,338,3.182,339,2.015,340,2.015,341,1.128,342,2.667,343,2.015,344,2.667,345,2.015,346,2.989,347,2.015,348,2.667,349,2.989,350,2.667,351,2.015,352,2.015,353,2.015,354,2.015,355,2.015,356,2.015,357,2.015,358,2.015,359,2.015,360,2.015,361,2.015,362,2.015]],["title/injectables/IsOnEdge.html",[57,1.254,363,1.045]],["body/injectables/IsOnEdge.html",[3,0.604,4,0.486,9,0.486,17,3.111,22,0.379,30,0.994,31,1.905,39,1.726,57,1.726,60,1.294,64,2.248,65,0.073,66,1.874,67,0.666,68,2.248,76,1.192,79,0.814,81,0.511,82,2.248,88,3.477,94,1.905,117,1.28,118,1.203,119,2.298,120,1.28,124,1.819,125,1.28,138,1.627,141,1.28,142,0.604,144,0.604,148,0.604,150,1.067,151,1.548,154,0.604,155,0.112,188,1.905,239,1.548,244,1.819,331,0.036,332,0.049,333,0.036,363,1.439,364,1.548,365,1.905,366,3.302,367,3.302,368,3.302,369,3.302,370,3.302,371,3.302,372,2.449,373,2.449,374,2.449,375,2.449,376,3.302,377,2.449,378,3.302,379,2.449,380,2.449,381,2.449,382,3.302,383,2.449,384,1.905,385,1.905,386,1.905,387,2.449,388,2.449,389,2.449,390,2.449,391,2.449,392,2.449,393,2.449,394,3.302,395,2.449,396,3.302,397,2.449,398,2.449,399,2.449,400,2.449,401,2.449,402,2.449,403,2.449]],["title/classes/KEYS.html",[145,0.871,155,0.11]],["body/classes/KEYS.html",[3,0.472,4,0.38,9,0.38,22,0.297,23,1.009,30,0.576,60,1.197,65,0.073,67,0.616,76,0.981,78,1.732,79,0.981,81,0.752,103,2.555,121,0.981,142,0.472,143,0.695,144,0.472,145,1.009,146,0.472,147,0.472,148,0.472,149,0.695,154,1.056,155,0.15,205,0.94,206,1.444,268,1.425,292,1.147,293,1.001,298,0.834,308,1.001,312,1.661,318,1.71,320,1.71,331,0.028,332,0.041,333,0.028,341,1.732,404,0.834,405,0.834,406,3.089,407,2.067,408,2.067,409,2.067,410,2.067,411,1.756,412,1.914,413,1.756,414,1.914,415,1.756,416,1.914,417,1.756,418,1.914,419,1.756,420,1.914,421,1.756,422,1.914,423,1.001,424,1.001,425,1.001,426,1.001,427,1.001,428,1.001,429,1.001,430,1.661,431,1.993,432,1.453,433,1.71,434,1.21,435,1.756,436,1.21,437,1.756,438,1.21,439,1.21,440,1.756,441,1.21,442,1.21,443,1.21,444,1.21,445,1.21,446,1.21,447,1.21,448,1.21,449,1.21,450,1.21,451,2.067,452,1.21,453,1.21,454,1.21,455,2.067,456,1.21,457,1.21,458,1.21,459,2.067,460,1.21,461,1.21,462,1.21,463,1.21,464,1.21]],["title/classes/LEVEL.html",[30,0.722,155,0.11]],["body/classes/LEVEL.html",[3,0.366,4,0.294,9,0.294,22,0.23,23,0.833,30,0.691,60,1.368,65,0.073,67,0.704,76,1.121,78,1.98,79,1.121,81,0.74,103,2.566,121,0.96,142,0.366,143,0.539,144,0.366,145,0.539,146,0.366,147,0.366,148,0.366,149,0.539,154,0.985,155,0.128,205,0.929,206,1.413,268,1.488,292,1.134,293,1.467,298,0.646,308,0.776,312,1.641,318,0.776,320,0.776,331,0.022,332,0.034,333,0.022,341,1.574,404,0.646,405,0.646,406,3.102,407,0.938,408,0.938,409,0.938,410,0.938,411,0.938,413,0.938,415,0.938,417,0.938,419,0.938,421,0.938,423,0.776,424,0.776,425,0.776,426,0.776,427,0.776,428,0.776,429,0.776,430,1.641,431,1.969,432,1.652,433,1.786,434,0.938,435,1.774,436,0.938,437,1.774,438,0.938,439,0.938,440,1.774,441,0.938,442,0.938,443,1.45,444,1.45,445,1.45,446,1.45,447,1.45,448,1.45,449,1.45,450,1.774,451,2.283,452,1.774,453,1.774,454,1.774,455,2.283,456,1.774,457,1.774,458,1.774,459,2.283,460,1.774,461,1.774,462,1.774,463,0.938,464,0.938,465,1.483,466,1.483,467,1.483,468,1.483,469,1.483,470,1.483,471,1.483,472,1.483,473,1.483,474,1.483,475,1.483,476,1.483,477,1.483,478,1.483,479,1.483,480,1.483,481,1.483,482,1.483,483,1.483,484,1.483,485,1.483]],["title/classes/PUNKTE.html",[148,0.591,155,0.11]],["body/classes/PUNKTE.html",[3,0.472,4,0.38,9,0.38,22,0.297,23,1.009,30,0.576,60,1.197,65,0.073,67,0.616,76,0.981,78,1.732,79,0.981,81,0.752,103,2.555,121,1.012,142,0.472,143,0.695,144,0.472,145,0.695,146,0.472,147,0.472,148,0.685,149,0.695,154,1.056,155,0.15,205,0.94,206,1.489,268,1.425,292,1.147,293,1.001,298,0.834,308,1.71,312,1.661,318,1.001,320,1.001,331,0.028,332,0.041,333,0.028,341,1.732,404,0.834,405,0.834,406,3.089,407,1.21,408,1.21,409,1.21,410,1.21,411,1.21,413,1.21,415,1.21,417,1.21,419,1.21,421,1.21,423,1.001,424,1.001,425,1.001,426,1.001,427,1.001,428,1.001,429,1.001,430,1.661,431,1.993,432,1.453,433,1.71,434,2.067,435,2.067,436,2.067,437,2.067,438,2.067,439,1.756,440,2.067,441,2.067,442,2.067,443,1.21,444,1.21,445,1.21,446,1.21,447,1.21,448,1.21,449,1.21,450,1.21,451,2.067,452,1.21,453,1.21,454,1.21,455,2.067,456,1.21,457,1.21,458,1.21,459,2.067,460,1.21,461,1.21,462,1.21,463,1.21,464,1.21,486,1.914,487,1.914,488,1.914,489,1.914,490,1.914,491,1.914]],["title/classes/Tetromino.html",[130,1.045,155,0.11]],["body/classes/Tetromino.html",[3,0.561,4,0.451,9,0.451,11,1.983,22,0.352,23,1.139,26,1.983,27,1.768,39,1.64,42,2.449,55,1.768,60,1.358,64,2.026,65,0.073,66,1.688,67,0.68,68,2.026,76,1.149,79,0.774,81,0.6,82,2.126,83,3.015,108,2.657,117,1.188,118,1.266,119,2.253,120,1.188,121,1.037,124,1.913,125,1.188,130,1.367,138,0.99,146,0.561,147,0.561,150,0.99,154,0.774,155,0.104,178,1.436,205,0.774,244,0.99,255,1.983,256,1.436,292,0.684,316,2.449,331,0.033,332,0.046,333,0.033,334,0.99,336,1.436,337,3.015,338,2.796,339,1.768,340,3.015,341,0.99,342,2.441,343,1.768,344,2.441,345,1.768,346,2.796,347,1.768,348,2.441,349,2.796,350,2.441,351,1.768,352,2.441,353,1.768,354,1.768,355,1.768,356,1.768,357,1.768,358,2.441,359,1.768,360,2.441,361,1.768,362,2.441,404,0.99,492,3.137,493,3.137,494,3.137,495,2.272,496,3.137,497,2.272,498,2.272,499,2.272,500,2.272,501,2.272,502,2.272,503,2.272,504,2.272]],["title/injectables/TetromisRotation.html",[59,1.254,363,1.045]],["body/injectables/TetromisRotation.html",[3,0.793,4,0.637,9,0.637,22,0.498,35,2.5,39,2.056,58,3.06,59,2.056,60,0.967,64,1.68,65,0.072,66,1.4,67,0.498,68,1.68,81,0.498,82,1.68,117,2.056,118,1.409,124,1.713,138,1.851,141,1.68,142,0.793,144,0.793,148,0.793,150,1.4,151,2.031,154,0.793,155,0.147,239,2.031,244,1.4,248,2.5,331,0.047,332,0.058,333,0.047,363,1.713,364,2.031,384,2.5,385,2.5,386,2.5,505,2.5,506,3.932,507,3.213,508,3.213,509,3.213,510,3.213,511,3.213,512,3.213,513,3.213,514,3.213]],["title/coverage.html",[515,2.533]],["body/coverage.html",[0,1.347,1,1.954,9,0.613,10,2.406,30,0.931,57,1.617,59,1.617,65,0.072,67,0.479,81,0.748,118,0.931,130,1.347,142,0.763,143,1.123,144,0.763,145,1.123,146,0.763,147,0.763,148,0.763,149,1.123,155,0.2,167,1.954,331,0.046,332,0.057,333,0.046,334,1.347,336,2.427,363,1.673,365,2.406,405,2.061,430,1.347,505,2.406,515,2.406,516,3.092,517,3.092,518,3.092,519,3.092,520,4.177,521,3.092,522,4.579,523,4.579,524,3.092,525,3.092,526,3.092,527,3.092,528,3.092]],["title/dependencies.html",[529,2.011,530,2.24]],["body/dependencies.html",[65,0.072,141,1.818,331,0.051,332,0.061,333,0.051,530,2.705,531,3.476,532,4.792,533,3.476,534,3.476,535,3.476,536,4.123,537,4.123,538,3.476,539,3.476,540,3.476,541,3.476,542,3.476,543,3.476,544,3.476,545,3.476,546,3.476,547,3.476]],["title/index.html",[22,0.311,548,2.011,549,2.011]],["body/index.html",[0,1.822,4,0.615,16,2.411,65,0.057,66,1.35,167,1.958,331,0.046,332,0.057,333,0.046,550,3.099,551,3.845,552,3.099,553,4.181,554,4.181,555,3.099,556,3.099,557,3.099,558,3.845,559,4.495,560,4.644,561,3.099,562,3.099,563,3.099,564,3.099,565,3.099,566,3.099,567,3.099,568,3.099,569,3.099,570,3.099,571,4.181,572,4.181,573,3.099,574,4.495,575,3.099,576,3.099,577,3.099,578,3.099,579,3.099,580,3.099,581,3.099,582,3.845,583,3.845,584,4.372,585,3.099,586,3.845,587,3.845,588,3.099,589,4.372,590,3.099,591,3.099,592,3.099,593,4.181,594,3.099,595,3.099,596,3.099,597,3.099,598,3.099]],["title/modules.html",[599,2.533]],["body/modules.html",[65,0.064,331,0.056,332,0.064,333,0.056,599,2.977]],["title/overview.html",[600,2.533]],["body/overview.html",[0,1.634,65,0.063,121,1.063,205,0.925,206,1.362,331,0.055,332,0.063,333,0.055,334,1.634,364,2.369,404,1.634,600,2.917]],["title/miscellaneous/variables.html",[601,1.565,602,2.24]],["body/miscellaneous/variables.html",[22,0.436,65,0.072,67,0.692,76,1.042,78,1.948,79,1.103,81,0.768,121,1.042,142,0.893,143,1.315,144,0.893,146,0.893,147,0.893,149,1.315,205,1.042,206,1.534,268,1.577,292,1.271,298,1.227,312,1.84,331,0.041,332,0.053,333,0.041,405,1.227,423,1.472,424,1.472,425,1.472,426,1.472,427,1.472,428,1.472,429,1.472,430,1.84,431,2.208,432,1.472,433,1.472,601,2.191,602,2.191,603,4.471]]],"invertedIndex":[["",{"_index":65,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"injectables/IsOnEdge.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":81,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"injectables/IsOnEdge.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.9.1",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":525,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":524,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":121,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.10.0",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":294,"title":{},"body":{"components/BoardComponent.html":{}}}],["1.8",{"_index":301,"title":{},"body":{"components/BoardComponent.html":{}}}],["10",{"_index":268,"title":{},"body":{"components/BoardComponent.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":435,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["11",{"_index":452,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["12",{"_index":453,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["13",{"_index":454,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["130",{"_index":449,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["14",{"_index":456,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["15",{"_index":457,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["16",{"_index":458,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["17",{"_index":460,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["18",{"_index":461,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["19",{"_index":462,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["1px",{"_index":296,"title":{},"body":{"components/BoardComponent.html":{}}}],["2",{"_index":206,"title":{},"body":{"components/BoardComponent.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2/32",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":432,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"miscellaneous/variables.html":{}}}],["20ms",{"_index":464,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["220",{"_index":448,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["27",{"_index":413,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["29",{"_index":463,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["3",{"_index":292,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{},"miscellaneous/variables.html":{}}}],["30",{"_index":433,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"miscellaneous/variables.html":{}}}],["300",{"_index":437,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["32",{"_index":419,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["35",{"_index":319,"title":{},"body":{"components/BoardComponent.html":{}}}],["37",{"_index":415,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["38",{"_index":421,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["380",{"_index":447,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["39",{"_index":417,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["4",{"_index":205,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["4.4.1",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":411,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["470",{"_index":446,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["5",{"_index":312,"title":{},"body":{"components/BoardComponent.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"miscellaneous/variables.html":{}}}],["50",{"_index":459,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["500",{"_index":439,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["550",{"_index":445,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["6",{"_index":430,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["6.4.0",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["630",{"_index":444,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["7",{"_index":431,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"miscellaneous/variables.html":{}}}],["70",{"_index":455,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["720",{"_index":443,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["8",{"_index":293,"title":{},"body":{"components/BoardComponent.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["8.2.14",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["8.3.20",{"_index":556,"title":{},"body":{"index.html":{}}}],["80",{"_index":451,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["800",{"_index":440,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["9",{"_index":450,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["abbrechen",{"_index":226,"title":{},"body":{"components/BoardComponent.html":{}}}],["abovefloor",{"_index":366,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["abovefloor(y",{"_index":372,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["abwärts",{"_index":259,"title":{},"body":{"components/BoardComponent.html":{}}}],["actual_component",{"_index":330,"title":{},"body":{"components/BoardComponent.html":{}}}],["alle",{"_index":194,"title":{},"body":{"components/BoardComponent.html":{}}}],["als",{"_index":509,"title":{},"body":{"injectables/TetromisRotation.html":{}}}],["angekommen",{"_index":284,"title":{},"body":{"components/BoardComponent.html":{}}}],["angular",{"_index":553,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":141,"title":{},"body":{"components/BoardComponent.html":{},"injectables/IsOnEdge.html":{},"injectables/TetromisRotation.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["angulartetris",{"_index":550,"title":{},"body":{"index.html":{}}}],["animate",{"_index":40,"title":{},"body":{"components/BoardComponent.html":{}}}],["animate(now",{"_index":75,"title":{},"body":{"components/BoardComponent.html":{}}}],["animation",{"_index":225,"title":{},"body":{"components/BoardComponent.html":{}}}],["animationsloop",{"_index":238,"title":{},"body":{"components/BoardComponent.html":{}}}],["app",{"_index":16,"title":{},"body":{"components/BoardComponent.html":{},"index.html":{}}}],["arguments",{"_index":70,"title":{},"body":{"components/BoardComponent.html":{}}}],["arial",{"_index":297,"title":{},"body":{"components/BoardComponent.html":{}}}],["array(cols).fill(0",{"_index":307,"title":{},"body":{"components/BoardComponent.html":{}}}],["array.from",{"_index":305,"title":{},"body":{"components/BoardComponent.html":{}}}],["artifacts",{"_index":575,"title":{},"body":{"index.html":{}}}],["aus",{"_index":190,"title":{},"body":{"components/BoardComponent.html":{}}}],["ausrechnen",{"_index":203,"title":{},"body":{"components/BoardComponent.html":{}}}],["automatically",{"_index":565,"title":{},"body":{"index.html":{}}}],["beenden",{"_index":264,"title":{},"body":{"components/BoardComponent.html":{}}}],["bei",{"_index":221,"title":{},"body":{"components/BoardComponent.html":{}}}],["bewegt",{"_index":392,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["bewegung",{"_index":260,"title":{},"body":{"components/BoardComponent.html":{}}}],["black",{"_index":290,"title":{},"body":{"components/BoardComponent.html":{}}}],["block",{"_index":188,"title":{},"body":{"components/BoardComponent.html":{},"injectables/IsOnEdge.html":{}}}],["block_size",{"_index":143,"title":{},"body":{"components/BoardComponent.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["blue",{"_index":425,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"miscellaneous/variables.html":{}}}],["blöcke",{"_index":248,"title":{},"body":{"components/BoardComponent.html":{},"injectables/TetromisRotation.html":{}}}],["blöcken",{"_index":202,"title":{},"body":{"components/BoardComponent.html":{}}}],["board",{"_index":17,"title":{},"body":{"components/BoardComponent.html":{},"injectables/IsOnEdge.html":{}}}],["board.component.css",{"_index":19,"title":{},"body":{"components/BoardComponent.html":{}}}],["board.component.html",{"_index":21,"title":{},"body":{"components/BoardComponent.html":{}}}],["boardcomponent",{"_index":1,"title":{"components/BoardComponent.html":{}},"body":{"components/BoardComponent.html":{},"coverage.html":{}}}],["boardes",{"_index":253,"title":{},"body":{"components/BoardComponent.html":{}}}],["boolean",{"_index":88,"title":{},"body":{"components/BoardComponent.html":{},"injectables/IsOnEdge.html":{}}}],["bootstrap",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["border",{"_index":313,"title":{},"body":{"components/BoardComponent.html":{}}}],["browser",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":574,"title":{},"body":{"index.html":{}}}],["button",{"_index":209,"title":{},"body":{"components/BoardComponent.html":{}}}],["cancelanimationframe(this.requestid",{"_index":228,"title":{},"body":{"components/BoardComponent.html":{}}}],["canvas",{"_index":24,"title":{},"body":{"components/BoardComponent.html":{}}}],["canvasnext",{"_index":25,"title":{},"body":{"components/BoardComponent.html":{}}}],["canvasrenderingcontext2d",{"_index":108,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["change",{"_index":567,"title":{},"body":{"index.html":{}}}],["check",{"_index":596,"title":{},"body":{"index.html":{}}}],["class",{"_index":155,"title":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{}},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"injectables/IsOnEdge.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{},"coverage.html":{}}}],["classes",{"_index":404,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{},"overview.html":{}}}],["clearlines",{"_index":41,"title":{},"body":{"components/BoardComponent.html":{}}}],["cli",{"_index":554,"title":{},"body":{"index.html":{}}}],["code",{"_index":569,"title":{},"body":{"index.html":{}}}],["color",{"_index":316,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["cols",{"_index":142,"title":{},"body":{"components/BoardComponent.html":{},"injectables/IsOnEdge.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"injectables/TetromisRotation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":321,"title":{},"body":{"components/BoardComponent.html":{}}}],["component",{"_index":0,"title":{"components/BoardComponent.html":{}},"body":{"components/BoardComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_template",{"_index":328,"title":{},"body":{"components/BoardComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/BoardComponent.html":{}}}],["const",{"_index":341,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{}}}],["constants",{"_index":150,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"injectables/IsOnEdge.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{}}}],["constructor",{"_index":55,"title":{},"body":{"components/BoardComponent.html":{},"classes/Tetromino.html":{}}}],["constructor(ctx",{"_index":495,"title":{},"body":{"classes/Tetromino.html":{}}}],["constructor(edge",{"_index":56,"title":{},"body":{"components/BoardComponent.html":{}}}],["constructor(private",{"_index":178,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["coverage",{"_index":515,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creates",{"_index":62,"title":{},"body":{"components/BoardComponent.html":{}}}],["ctx",{"_index":26,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["ctxnext",{"_index":27,"title":{},"body":{"components/BoardComponent.html":{},"classes/Tetromino.html":{}}}],["ctxnext.canvas.height",{"_index":355,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["ctxnext.canvas.width",{"_index":354,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["ctxnext.clearrect(0",{"_index":353,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["ctxnext.fillrect(x",{"_index":357,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["ctxnext.fillstyle",{"_index":356,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["cyan",{"_index":424,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"miscellaneous/variables.html":{}}}],["dach",{"_index":266,"title":{},"body":{"components/BoardComponent.html":{}}}],["das",{"_index":94,"title":{},"body":{"components/BoardComponent.html":{},"injectables/IsOnEdge.html":{}}}],["dass",{"_index":511,"title":{},"body":{"injectables/TetromisRotation.html":{}}}],["decorators",{"_index":101,"title":{},"body":{"components/BoardComponent.html":{}}}],["default",{"_index":78,"title":{},"body":{"components/BoardComponent.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":60,"title":{},"body":{"components/BoardComponent.html":{},"injectables/IsOnEdge.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{}}}],["den",{"_index":274,"title":{},"body":{"components/BoardComponent.html":{}}}],["dependencies",{"_index":530,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["der",{"_index":239,"title":{},"body":{"components/BoardComponent.html":{},"injectables/IsOnEdge.html":{},"injectables/TetromisRotation.html":{}}}],["des",{"_index":252,"title":{},"body":{"components/BoardComponent.html":{}}}],["dev",{"_index":562,"title":{},"body":{"index.html":{}}}],["development",{"_index":557,"title":{},"body":{"index.html":{}}}],["die",{"_index":187,"title":{},"body":{"components/BoardComponent.html":{}}}],["directive",{"_index":326,"title":{},"body":{"components/BoardComponent.html":{}}}],["directives",{"_index":329,"title":{},"body":{"components/BoardComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":573,"title":{},"body":{"index.html":{}}}],["directory",{"_index":578,"title":{},"body":{"index.html":{}}}],["dist",{"_index":577,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/BoardComponent.html":{}}}],["double",{"_index":436,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["down",{"_index":407,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["draw",{"_index":42,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["drawboard",{"_index":43,"title":{},"body":{"components/BoardComponent.html":{}}}],["drawnext",{"_index":492,"title":{},"body":{"classes/Tetromino.html":{}}}],["drawnext(ctxnext",{"_index":352,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["drop",{"_index":44,"title":{},"body":{"components/BoardComponent.html":{}}}],["dropbewegung",{"_index":240,"title":{},"body":{"components/BoardComponent.html":{}}}],["dx",{"_index":396,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["dy",{"_index":394,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["dynamic",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":590,"title":{},"body":{"index.html":{}}}],["edge",{"_index":69,"title":{},"body":{"components/BoardComponent.html":{}}}],["edge.service",{"_index":152,"title":{},"body":{"components/BoardComponent.html":{}}}],["einander",{"_index":270,"title":{},"body":{"components/BoardComponent.html":{}}}],["einem",{"_index":389,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["einer",{"_index":402,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["einfrieren",{"_index":281,"title":{},"body":{"components/BoardComponent.html":{}}}],["elapsed",{"_index":157,"title":{},"body":{"components/BoardComponent.html":{}}}],["element",{"_index":325,"title":{},"body":{"components/BoardComponent.html":{}}}],["elementref",{"_index":100,"title":{},"body":{"components/BoardComponent.html":{}}}],["end",{"_index":589,"title":{},"body":{"index.html":{}}}],["erhöhen",{"_index":276,"title":{},"body":{"components/BoardComponent.html":{}}}],["ermöglicht",{"_index":508,"title":{},"body":{"injectables/TetromisRotation.html":{}}}],["erreicht",{"_index":267,"title":{},"body":{"components/BoardComponent.html":{}}}],["erstellen",{"_index":304,"title":{},"body":{"components/BoardComponent.html":{}}}],["esc",{"_index":408,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["event",{"_index":71,"title":{},"body":{"components/BoardComponent.html":{}}}],["event.keycode",{"_index":162,"title":{},"body":{"components/BoardComponent.html":{}}}],["event.preventdefault",{"_index":166,"title":{},"body":{"components/BoardComponent.html":{}}}],["example",{"_index":13,"title":{},"body":{"components/BoardComponent.html":{}}}],["execute",{"_index":586,"title":{},"body":{"index.html":{}}}],["export",{"_index":154,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"injectables/IsOnEdge.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{}}}],["falls",{"_index":265,"title":{},"body":{"components/BoardComponent.html":{}}}],["false",{"_index":237,"title":{},"body":{"components/BoardComponent.html":{}}}],["farben",{"_index":146,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["farben[typeid",{"_index":347,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["farben[value",{"_index":257,"title":{},"body":{"components/BoardComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"injectables/IsOnEdge.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{},"coverage.html":{}}}],["files",{"_index":568,"title":{},"body":{"index.html":{}}}],["flag",{"_index":580,"title":{},"body":{"index.html":{}}}],["float",{"_index":322,"title":{},"body":{"components/BoardComponent.html":{}}}],["formen",{"_index":147,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formen[typeid",{"_index":345,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["freeze",{"_index":45,"title":{},"body":{"components/BoardComponent.html":{}}}],["further",{"_index":592,"title":{},"body":{"index.html":{}}}],["gameover",{"_index":46,"title":{},"body":{"components/BoardComponent.html":{}}}],["gamestarted",{"_index":28,"title":{},"body":{"components/BoardComponent.html":{}}}],["generate",{"_index":571,"title":{},"body":{"index.html":{}}}],["generated",{"_index":552,"title":{},"body":{"index.html":{}}}],["getemptyboard",{"_index":47,"title":{},"body":{"components/BoardComponent.html":{}}}],["getlinesclearedpoints",{"_index":367,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["getlinesclearedpoints(lines",{"_index":374,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["getting",{"_index":548,"title":{"index.html":{}},"body":{}}],["gleicher",{"_index":222,"title":{},"body":{"components/BoardComponent.html":{}}}],["go",{"_index":595,"title":{},"body":{"index.html":{}}}],["green",{"_index":428,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"miscellaneous/variables.html":{}}}],["grid",{"_index":309,"title":{},"body":{"components/BoardComponent.html":{}}}],["grösse",{"_index":199,"title":{},"body":{"components/BoardComponent.html":{}}}],["grössen",{"_index":189,"title":{},"body":{"components/BoardComponent.html":{}}}],["hard",{"_index":170,"title":{},"body":{"components/BoardComponent.html":{}}}],["hard_drop",{"_index":442,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["help",{"_index":593,"title":{},"body":{"index.html":{}}}],["highscore",{"_index":29,"title":{},"body":{"components/BoardComponent.html":{}}}],["hilfsmethode",{"_index":401,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["hostlistener",{"_index":140,"title":{},"body":{"components/BoardComponent.html":{}}}],["hostlistener('window:keydown",{"_index":160,"title":{},"body":{"components/BoardComponent.html":{}}}],["hostlisteners",{"_index":53,"title":{},"body":{"components/BoardComponent.html":{}}}],["html",{"_index":324,"title":{},"body":{"components/BoardComponent.html":{}}}],["http://localhost:4200",{"_index":564,"title":{},"body":{"index.html":{}}}],["id",{"_index":224,"title":{},"body":{"components/BoardComponent.html":{}}}],["identifier",{"_index":517,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["import",{"_index":138,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"injectables/IsOnEdge.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"injectables/IsOnEdge.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"injectables/IsOnEdge.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{}}}],["initboard",{"_index":48,"title":{},"body":{"components/BoardComponent.html":{}}}],["initialisiert",{"_index":93,"title":{},"body":{"components/BoardComponent.html":{}}}],["initnext",{"_index":49,"title":{},"body":{"components/BoardComponent.html":{}}}],["injectable",{"_index":363,"title":{"injectables/IsOnEdge.html":{},"injectables/TetromisRotation.html":{}},"body":{"injectables/IsOnEdge.html":{},"injectables/TetromisRotation.html":{},"coverage.html":{}}}],["injectables",{"_index":364,"title":{},"body":{"injectables/IsOnEdge.html":{},"injectables/TetromisRotation.html":{},"overview.html":{}}}],["insidewalls",{"_index":368,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["insidewalls(x",{"_index":376,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["instance",{"_index":63,"title":{},"body":{"components/BoardComponent.html":{}}}],["interface",{"_index":334,"title":{"interfaces/ITetromino.html":{}},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":335,"title":{},"body":{"interfaces/ITetromino.html":{}}}],["isempty",{"_index":369,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["isempty(value",{"_index":378,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["isonedge",{"_index":57,"title":{"injectables/IsOnEdge.html":{}},"body":{"components/BoardComponent.html":{},"injectables/IsOnEdge.html":{},"coverage.html":{}}}],["itetromino",{"_index":118,"title":{"interfaces/ITetromino.html":{}},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"injectables/IsOnEdge.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{},"coverage.html":{}}}],["json.parse(json.stringify(piece",{"_index":513,"title":{},"body":{"injectables/TetromisRotation.html":{}}}],["karma",{"_index":588,"title":{},"body":{"index.html":{}}}],["keyboardevent",{"_index":73,"title":{},"body":{"components/BoardComponent.html":{}}}],["keyevent(event",{"_index":161,"title":{},"body":{"components/BoardComponent.html":{}}}],["keys",{"_index":145,"title":{"classes/KEYS.html":{}},"body":{"components/BoardComponent.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"coverage.html":{}}}],["keys.down",{"_index":123,"title":{},"body":{"components/BoardComponent.html":{}}}],["keys.esc",{"_index":163,"title":{},"body":{"components/BoardComponent.html":{}}}],["keys.left",{"_index":116,"title":{},"body":{"components/BoardComponent.html":{}}}],["keys.right",{"_index":122,"title":{},"body":{"components/BoardComponent.html":{}}}],["keys.space",{"_index":126,"title":{},"body":{"components/BoardComponent.html":{}}}],["keys.up",{"_index":127,"title":{},"body":{"components/BoardComponent.html":{}}}],["klasse",{"_index":386,"title":{},"body":{"injectables/IsOnEdge.html":{},"injectables/TetromisRotation.html":{}}}],["leeres",{"_index":302,"title":{},"body":{"components/BoardComponent.html":{}}}],["left",{"_index":318,"title":{},"body":{"components/BoardComponent.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["legalen",{"_index":390,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["legend",{"_index":323,"title":{},"body":{"components/BoardComponent.html":{}}}],["length",{"_index":306,"title":{},"body":{"components/BoardComponent.html":{}}}],["level",{"_index":30,"title":{"classes/LEVEL.html":{}},"body":{"components/BoardComponent.html":{},"injectables/IsOnEdge.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"coverage.html":{}}}],["level[this.level",{"_index":235,"title":{},"body":{"components/BoardComponent.html":{}}}],["lines",{"_index":31,"title":{},"body":{"components/BoardComponent.html":{},"injectables/IsOnEdge.html":{}}}],["lines_per_level",{"_index":149,"title":{},"body":{"components/BoardComponent.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["linie",{"_index":271,"title":{},"body":{"components/BoardComponent.html":{}}}],["literal",{"_index":136,"title":{},"body":{"components/BoardComponent.html":{}}}],["löschen",{"_index":272,"title":{},"body":{"components/BoardComponent.html":{}}}],["margin",{"_index":310,"title":{},"body":{"components/BoardComponent.html":{}}}],["matching",{"_index":332,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"injectables/IsOnEdge.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":361,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["matrix",{"_index":303,"title":{},"body":{"components/BoardComponent.html":{}}}],["memberof",{"_index":159,"title":{},"body":{"components/BoardComponent.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/BoardComponent.html":{}}}],["methods",{"_index":39,"title":{},"body":{"components/BoardComponent.html":{},"injectables/IsOnEdge.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{}}}],["miscellaneous",{"_index":601,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":599,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":594,"title":{},"body":{"index.html":{}}}],["move",{"_index":493,"title":{},"body":{"classes/Tetromino.html":{}}}],["move(p",{"_index":358,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["moves",{"_index":32,"title":{},"body":{"components/BoardComponent.html":{}}}],["name",{"_index":66,"title":{},"body":{"components/BoardComponent.html":{},"injectables/IsOnEdge.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{},"index.html":{}}}],["navigate",{"_index":563,"title":{},"body":{"index.html":{}}}],["neben",{"_index":269,"title":{},"body":{"components/BoardComponent.html":{}}}],["new",{"_index":167,"title":{},"body":{"components/BoardComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":33,"title":{},"body":{"components/BoardComponent.html":{}}}],["ng",{"_index":560,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":50,"title":{},"body":{"components/BoardComponent.html":{}}}],["none",{"_index":423,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"miscellaneous/variables.html":{}}}],["nooftypes",{"_index":362,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["notoccupied",{"_index":370,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["notoccupied(board",{"_index":380,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["now",{"_index":80,"title":{},"body":{"components/BoardComponent.html":{}}}],["number",{"_index":76,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"injectables/IsOnEdge.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{},"miscellaneous/variables.html":{}}}],["nächsten",{"_index":201,"title":{},"body":{"components/BoardComponent.html":{}}}],["object",{"_index":115,"title":{},"body":{"components/BoardComponent.html":{}}}],["objekte",{"_index":195,"title":{},"body":{"components/BoardComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/BoardComponent.html":{}}}],["optional",{"_index":68,"title":{},"body":{"components/BoardComponent.html":{},"injectables/IsOnEdge.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{}}}],["orange",{"_index":426,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"miscellaneous/variables.html":{}}}],["ort",{"_index":391,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["out",{"_index":597,"title":{},"body":{"index.html":{}}}],["over",{"_index":300,"title":{},"body":{"components/BoardComponent.html":{}}}],["overview",{"_index":600,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":117,"title":{},"body":{"components/BoardComponent.html":{},"injectables/IsOnEdge.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{}}}],["p.shape",{"_index":359,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["p.shape.every((row",{"_index":393,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["p.x",{"_index":120,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"injectables/IsOnEdge.html":{},"classes/Tetromino.html":{}}}],["p.y",{"_index":125,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"injectables/IsOnEdge.html":{},"classes/Tetromino.html":{}}}],["package",{"_index":529,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":158,"title":{},"body":{"components/BoardComponent.html":{}}}],["parameters",{"_index":64,"title":{},"body":{"components/BoardComponent.html":{},"injectables/IsOnEdge.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{}}}],["paused",{"_index":34,"title":{},"body":{"components/BoardComponent.html":{}}}],["performance.now",{"_index":220,"title":{},"body":{"components/BoardComponent.html":{}}}],["piece",{"_index":35,"title":{},"body":{"components/BoardComponent.html":{},"injectables/TetromisRotation.html":{}}}],["play",{"_index":51,"title":{},"body":{"components/BoardComponent.html":{}}}],["points",{"_index":36,"title":{},"body":{"components/BoardComponent.html":{}}}],["private",{"_index":179,"title":{},"body":{"components/BoardComponent.html":{}}}],["prod",{"_index":579,"title":{},"body":{"index.html":{}}}],["production",{"_index":581,"title":{},"body":{"index.html":{}}}],["project",{"_index":551,"title":{},"body":{"index.html":{}}}],["properties",{"_index":23,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{}}}],["protractor",{"_index":591,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":384,"title":{},"body":{"injectables/IsOnEdge.html":{},"injectables/TetromisRotation.html":{}}}],["punkte",{"_index":148,"title":{"classes/PUNKTE.html":{}},"body":{"components/BoardComponent.html":{},"injectables/IsOnEdge.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"injectables/TetromisRotation.html":{},"coverage.html":{}}}],["punkte.hard_drop",{"_index":174,"title":{},"body":{"components/BoardComponent.html":{}}}],["punkte.soft_drop",{"_index":177,"title":{},"body":{"components/BoardComponent.html":{}}}],["purple",{"_index":429,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"miscellaneous/variables.html":{}}}],["randomizetetrominotype",{"_index":494,"title":{},"body":{"classes/Tetromino.html":{}}}],["randomizetetrominotype(nooftypes",{"_index":360,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["readme",{"_index":598,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":406,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["rechnet",{"_index":186,"title":{},"body":{"components/BoardComponent.html":{}}}],["red",{"_index":298,"title":{},"body":{"components/BoardComponent.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"miscellaneous/variables.html":{}}}],["reload",{"_index":566,"title":{},"body":{"index.html":{}}}],["request",{"_index":223,"title":{},"body":{"components/BoardComponent.html":{}}}],["requestanimationframe(this.animate.bind(this",{"_index":246,"title":{},"body":{"components/BoardComponent.html":{}}}],["requestid",{"_index":37,"title":{},"body":{"components/BoardComponent.html":{}}}],["resetgame",{"_index":52,"title":{},"body":{"components/BoardComponent.html":{}}}],["result",{"_index":331,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"injectables/IsOnEdge.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":333,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"injectables/IsOnEdge.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":244,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"injectables/IsOnEdge.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{}}}],["returns",{"_index":82,"title":{},"body":{"components/BoardComponent.html":{},"injectables/IsOnEdge.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{}}}],["right",{"_index":320,"title":{},"body":{"components/BoardComponent.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["root",{"_index":385,"title":{},"body":{"injectables/IsOnEdge.html":{},"injectables/TetromisRotation.html":{}}}],["rotate",{"_index":58,"title":{},"body":{"components/BoardComponent.html":{},"injectables/TetromisRotation.html":{}}}],["rotate(piece",{"_index":506,"title":{},"body":{"injectables/TetromisRotation.html":{}}}],["rotate.service",{"_index":153,"title":{},"body":{"components/BoardComponent.html":{}}}],["rotieren",{"_index":512,"title":{},"body":{"injectables/TetromisRotation.html":{}}}],["row.every((value",{"_index":395,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["row.every(value",{"_index":277,"title":{},"body":{"components/BoardComponent.html":{}}}],["row.foreach((value",{"_index":255,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["row.reverse",{"_index":514,"title":{},"body":{"injectables/TetromisRotation.html":{}}}],["rows",{"_index":144,"title":{},"body":{"components/BoardComponent.html":{},"injectables/IsOnEdge.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"injectables/TetromisRotation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":559,"title":{},"body":{"index.html":{}}}],["running",{"_index":582,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":570,"title":{},"body":{"index.html":{}}}],["score",{"_index":275,"title":{},"body":{"components/BoardComponent.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/BoardComponent.html":{}}}],["serve",{"_index":561,"title":{},"body":{"index.html":{}}}],["server",{"_index":558,"title":{},"body":{"index.html":{}}}],["service",{"_index":510,"title":{},"body":{"injectables/TetromisRotation.html":{}}}],["shape",{"_index":337,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["sich",{"_index":388,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["single",{"_index":434,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["skaliert",{"_index":193,"title":{},"body":{"components/BoardComponent.html":{}}}],["soft_drop",{"_index":441,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["solid",{"_index":315,"title":{},"body":{"components/BoardComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"injectables/IsOnEdge.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{},"index.html":{}}}],["space",{"_index":409,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["spawn",{"_index":340,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["spiel",{"_index":211,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/.../constants.ts",{"_index":603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/board/board.component.ts",{"_index":10,"title":{},"body":{"components/BoardComponent.html":{},"coverage.html":{}}}],["src/app/board/board.component.ts:110",{"_index":95,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:120",{"_index":97,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:137",{"_index":98,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:147",{"_index":77,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:161",{"_index":85,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:168",{"_index":86,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:180",{"_index":87,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:199",{"_index":84,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:21",{"_index":105,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:220",{"_index":89,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:23",{"_index":107,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:231",{"_index":90,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:24",{"_index":109,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:242",{"_index":91,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:25",{"_index":110,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:26",{"_index":99,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:27",{"_index":133,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:28",{"_index":131,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:29",{"_index":135,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:30",{"_index":132,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:31",{"_index":111,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:32",{"_index":137,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:33",{"_index":134,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:34",{"_index":112,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:35",{"_index":114,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:36",{"_index":113,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:37",{"_index":129,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:52",{"_index":74,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:73",{"_index":61,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:88",{"_index":96,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/board.component.ts:99",{"_index":92,"title":{},"body":{"components/BoardComponent.html":{}}}],["src/app/board/constants.ts",{"_index":405,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/board/constants.ts:27",{"_index":414,"title":{},"body":{"classes/KEYS.html":{}}}],["src/app/board/constants.ts:28",{"_index":420,"title":{},"body":{"classes/KEYS.html":{}}}],["src/app/board/constants.ts:29",{"_index":416,"title":{},"body":{"classes/KEYS.html":{}}}],["src/app/board/constants.ts:30",{"_index":422,"title":{},"body":{"classes/KEYS.html":{}}}],["src/app/board/constants.ts:31",{"_index":418,"title":{},"body":{"classes/KEYS.html":{}}}],["src/app/board/constants.ts:32",{"_index":412,"title":{},"body":{"classes/KEYS.html":{}}}],["src/app/board/constants.ts:36",{"_index":488,"title":{},"body":{"classes/PUNKTE.html":{}}}],["src/app/board/constants.ts:37",{"_index":486,"title":{},"body":{"classes/PUNKTE.html":{}}}],["src/app/board/constants.ts:38",{"_index":491,"title":{},"body":{"classes/PUNKTE.html":{}}}],["src/app/board/constants.ts:39",{"_index":490,"title":{},"body":{"classes/PUNKTE.html":{}}}],["src/app/board/constants.ts:40",{"_index":489,"title":{},"body":{"classes/PUNKTE.html":{}}}],["src/app/board/constants.ts:41",{"_index":487,"title":{},"body":{"classes/PUNKTE.html":{}}}],["src/app/board/constants.ts:45",{"_index":465,"title":{},"body":{"classes/LEVEL.html":{}}}],["src/app/board/constants.ts:46",{"_index":466,"title":{},"body":{"classes/LEVEL.html":{}}}],["src/app/board/constants.ts:47",{"_index":477,"title":{},"body":{"classes/LEVEL.html":{}}}],["src/app/board/constants.ts:48",{"_index":479,"title":{},"body":{"classes/LEVEL.html":{}}}],["src/app/board/constants.ts:49",{"_index":480,"title":{},"body":{"classes/LEVEL.html":{}}}],["src/app/board/constants.ts:50",{"_index":481,"title":{},"body":{"classes/LEVEL.html":{}}}],["src/app/board/constants.ts:51",{"_index":482,"title":{},"body":{"classes/LEVEL.html":{}}}],["src/app/board/constants.ts:52",{"_index":483,"title":{},"body":{"classes/LEVEL.html":{}}}],["src/app/board/constants.ts:53",{"_index":484,"title":{},"body":{"classes/LEVEL.html":{}}}],["src/app/board/constants.ts:54",{"_index":485,"title":{},"body":{"classes/LEVEL.html":{}}}],["src/app/board/constants.ts:55",{"_index":467,"title":{},"body":{"classes/LEVEL.html":{}}}],["src/app/board/constants.ts:56",{"_index":468,"title":{},"body":{"classes/LEVEL.html":{}}}],["src/app/board/constants.ts:57",{"_index":469,"title":{},"body":{"classes/LEVEL.html":{}}}],["src/app/board/constants.ts:58",{"_index":470,"title":{},"body":{"classes/LEVEL.html":{}}}],["src/app/board/constants.ts:59",{"_index":471,"title":{},"body":{"classes/LEVEL.html":{}}}],["src/app/board/constants.ts:60",{"_index":472,"title":{},"body":{"classes/LEVEL.html":{}}}],["src/app/board/constants.ts:61",{"_index":473,"title":{},"body":{"classes/LEVEL.html":{}}}],["src/app/board/constants.ts:62",{"_index":474,"title":{},"body":{"classes/LEVEL.html":{}}}],["src/app/board/constants.ts:63",{"_index":475,"title":{},"body":{"classes/LEVEL.html":{}}}],["src/app/board/constants.ts:64",{"_index":476,"title":{},"body":{"classes/LEVEL.html":{}}}],["src/app/board/constants.ts:65",{"_index":478,"title":{},"body":{"classes/LEVEL.html":{}}}],["src/app/board/edge.service.ts",{"_index":365,"title":{},"body":{"injectables/IsOnEdge.html":{},"coverage.html":{}}}],["src/app/board/edge.service.ts:10",{"_index":383,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["src/app/board/edge.service.ts:25",{"_index":379,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["src/app/board/edge.service.ts:29",{"_index":377,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["src/app/board/edge.service.ts:33",{"_index":373,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["src/app/board/edge.service.ts:37",{"_index":381,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["src/app/board/edge.service.ts:42",{"_index":375,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["src/app/board/rotate.service.ts",{"_index":505,"title":{},"body":{"injectables/TetromisRotation.html":{},"coverage.html":{}}}],["src/app/board/rotate.service.ts:11",{"_index":507,"title":{},"body":{"injectables/TetromisRotation.html":{}}}],["src/app/board/tetromis.component.ts",{"_index":336,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{},"coverage.html":{}}}],["src/app/board/tetromis.component.ts:11",{"_index":498,"title":{},"body":{"classes/Tetromino.html":{}}}],["src/app/board/tetromis.component.ts:12",{"_index":499,"title":{},"body":{"classes/Tetromino.html":{}}}],["src/app/board/tetromis.component.ts:13",{"_index":497,"title":{},"body":{"classes/Tetromino.html":{}}}],["src/app/board/tetromis.component.ts:14",{"_index":496,"title":{},"body":{"classes/Tetromino.html":{}}}],["src/app/board/tetromis.component.ts:20",{"_index":504,"title":{},"body":{"classes/Tetromino.html":{}}}],["src/app/board/tetromis.component.ts:28",{"_index":500,"title":{},"body":{"classes/Tetromino.html":{}}}],["src/app/board/tetromis.component.ts:39",{"_index":501,"title":{},"body":{"classes/Tetromino.html":{}}}],["src/app/board/tetromis.component.ts:51",{"_index":502,"title":{},"body":{"classes/Tetromino.html":{}}}],["src/app/board/tetromis.component.ts:57",{"_index":503,"title":{},"body":{"classes/Tetromino.html":{}}}],["start",{"_index":156,"title":{},"body":{"components/BoardComponent.html":{}}}],["started",{"_index":549,"title":{"index.html":{}},"body":{}}],["starten",{"_index":213,"title":{},"body":{"components/BoardComponent.html":{}}}],["state",{"_index":168,"title":{},"body":{"components/BoardComponent.html":{}}}],["statements",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":103,"title":{},"body":{"components/BoardComponent.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["stored",{"_index":576,"title":{},"body":{"index.html":{}}}],["string",{"_index":338,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["style",{"_index":314,"title":{},"body":{"components/BoardComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/BoardComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/BoardComponent.html":{}}}],["table",{"_index":528,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":527,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/BoardComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/BoardComponent.html":{}}}],["test",{"_index":585,"title":{},"body":{"index.html":{}}}],["tests",{"_index":584,"title":{},"body":{"index.html":{}}}],["tetris",{"_index":308,"title":{},"body":{"components/BoardComponent.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["tetromino",{"_index":130,"title":{"classes/Tetromino.html":{}},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"classes/Tetromino.html":{},"coverage.html":{}}}],["tetromino(this.ctx",{"_index":216,"title":{},"body":{"components/BoardComponent.html":{}}}],["tetromis.component",{"_index":151,"title":{},"body":{"components/BoardComponent.html":{},"injectables/IsOnEdge.html":{},"injectables/TetromisRotation.html":{}}}],["tetromisrotation",{"_index":59,"title":{"injectables/TetromisRotation.html":{}},"body":{"components/BoardComponent.html":{},"injectables/TetromisRotation.html":{},"coverage.html":{}}}],["this.abovefloor(y",{"_index":399,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["this.animate",{"_index":229,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board",{"_index":172,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.foreach((row",{"_index":254,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.splice(y",{"_index":278,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board.unshift(array(cols).fill(0",{"_index":279,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.board[y",{"_index":286,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.canvas.nativeelement.getcontext('2d",{"_index":185,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.canvasnext.nativeelement.getcontext('2d",{"_index":198,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.clearlines",{"_index":262,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.color",{"_index":346,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["this.ctx",{"_index":184,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.ctx.canvas.height",{"_index":192,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.ctx.canvas.width",{"_index":191,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.ctx.clearrect(0",{"_index":249,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.ctx.fillrect(1",{"_index":291,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.ctx.fillrect(this.x",{"_index":351,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["this.ctx.fillrect(x",{"_index":258,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.ctx.fillstyle",{"_index":256,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["this.ctx.filltext('game",{"_index":299,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.ctx.font",{"_index":295,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.ctx.scale(block_size",{"_index":196,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.ctxnext",{"_index":197,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.ctxnext.canvas.height",{"_index":207,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.ctxnext.canvas.width",{"_index":204,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.ctxnext.scale(block_size",{"_index":208,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.draw",{"_index":245,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.drawboard",{"_index":251,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.drop",{"_index":243,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.edge.getlinesclearedpoints(lines",{"_index":280,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.edge.valid(p",{"_index":171,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.freeze",{"_index":261,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.gameover",{"_index":164,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.gamestarted",{"_index":214,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.getemptyboard",{"_index":233,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.highscore",{"_index":183,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.initboard",{"_index":180,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.initnext",{"_index":181,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.insidewalls(x",{"_index":398,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["this.isempty(value",{"_index":397,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["this.level",{"_index":232,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.lines",{"_index":231,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.moves[event.keycode",{"_index":165,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.moves[event.keycode](this.piece",{"_index":169,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.moves[keys.down](this.piece",{"_index":176,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.next",{"_index":215,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.next.drawnext(this.ctxnext",{"_index":218,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.notoccupied(board",{"_index":400,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["this.paused",{"_index":236,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.piece",{"_index":217,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.piece.draw",{"_index":250,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.piece.move(p",{"_index":175,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.piece.shape.foreach((row",{"_index":285,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.piece.x",{"_index":288,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.piece.y",{"_index":263,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.piece.y][x",{"_index":287,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.points",{"_index":173,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.randomizetetrominotype(farben.length",{"_index":343,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["this.requestid",{"_index":227,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.resetgame",{"_index":182,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.rotate.rotate(p",{"_index":128,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.shape",{"_index":344,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["this.shape.foreach((row",{"_index":350,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["this.spawn",{"_index":339,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["this.time",{"_index":234,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.time.elapsed",{"_index":241,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.time.level",{"_index":242,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.time.start",{"_index":219,"title":{},"body":{"components/BoardComponent.html":{}}}],["this.x",{"_index":348,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["this.y",{"_index":349,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["time",{"_index":38,"title":{},"body":{"components/BoardComponent.html":{}}}],["top",{"_index":311,"title":{},"body":{"components/BoardComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/BoardComponent.html":{}}}],["triple",{"_index":438,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["true",{"_index":104,"title":{},"body":{"components/BoardComponent.html":{}}}],["tslib",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":67,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"injectables/IsOnEdge.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeid",{"_index":342,"title":{},"body":{"interfaces/ITetromino.html":{},"classes/Tetromino.html":{}}}],["um",{"_index":210,"title":{},"body":{"components/BoardComponent.html":{}}}],["und",{"_index":273,"title":{},"body":{"components/BoardComponent.html":{}}}],["unit",{"_index":583,"title":{},"body":{"index.html":{}}}],["unten",{"_index":283,"title":{},"body":{"components/BoardComponent.html":{}}}],["up",{"_index":410,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{}}}],["use",{"_index":572,"title":{},"body":{"index.html":{}}}],["valid",{"_index":371,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["valid(p",{"_index":382,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["validiert",{"_index":387,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["value",{"_index":79,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"injectables/IsOnEdge.html":{},"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"classes/Tetromino.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":327,"title":{},"body":{"components/BoardComponent.html":{}}}],["variable",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":602,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verloren",{"_index":289,"title":{},"body":{"components/BoardComponent.html":{}}}],["version",{"_index":555,"title":{},"body":{"index.html":{}}}],["via",{"_index":587,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":139,"title":{},"body":{"components/BoardComponent.html":{}}}],["viewchild('board",{"_index":102,"title":{},"body":{"components/BoardComponent.html":{}}}],["viewchild('next",{"_index":106,"title":{},"body":{"components/BoardComponent.html":{}}}],["void",{"_index":83,"title":{},"body":{"components/BoardComponent.html":{},"classes/Tetromino.html":{}}}],["von",{"_index":200,"title":{},"body":{"components/BoardComponent.html":{}}}],["wand",{"_index":403,"title":{},"body":{"injectables/IsOnEdge.html":{}}}],["wenn",{"_index":282,"title":{},"body":{"components/BoardComponent.html":{}}}],["white",{"_index":317,"title":{},"body":{"components/BoardComponent.html":{}}}],["window:keydown",{"_index":54,"title":{},"body":{"components/BoardComponent.html":{}}}],["window:keydown(event",{"_index":72,"title":{},"body":{"components/BoardComponent.html":{}}}],["x",{"_index":119,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"injectables/IsOnEdge.html":{},"classes/Tetromino.html":{}}}],["y",{"_index":124,"title":{},"body":{"components/BoardComponent.html":{},"interfaces/ITetromino.html":{},"injectables/IsOnEdge.html":{},"classes/Tetromino.html":{},"injectables/TetromisRotation.html":{}}}],["yellow",{"_index":427,"title":{},"body":{"classes/KEYS.html":{},"classes/LEVEL.html":{},"classes/PUNKTE.html":{},"miscellaneous/variables.html":{}}}],["zeichnen",{"_index":247,"title":{},"body":{"components/BoardComponent.html":{}}}],["zone.js",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["zu",{"_index":212,"title":{},"body":{"components/BoardComponent.html":{}}}],["zurücksetzen",{"_index":230,"title":{},"body":{"components/BoardComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/BoardComponent.html":{"url":"components/BoardComponent.html","title":"component - BoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/board/board.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board\n            \n\n            \n                styleUrls\n                ./board.component.css\n            \n\n\n\n            \n                templateUrl\n                ./board.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                board\n                            \n                            \n                                canvas\n                            \n                            \n                                canvasNext\n                            \n                            \n                                ctx\n                            \n                            \n                                ctxNext\n                            \n                            \n                                gameStarted\n                            \n                            \n                                highScore\n                            \n                            \n                                level\n                            \n                            \n                                lines\n                            \n                            \n                                moves\n                            \n                            \n                                next\n                            \n                            \n                                paused\n                            \n                            \n                                piece\n                            \n                            \n                                points\n                            \n                            \n                                requestId\n                            \n                            \n                                time\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                clearLines\n                            \n                            \n                                draw\n                            \n                            \n                                drawBoard\n                            \n                            \n                                drop\n                            \n                            \n                                freeze\n                            \n                            \n                                gameOver\n                            \n                            \n                                getEmptyBoard\n                            \n                            \n                                initBoard\n                            \n                            \n                                initNext\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                play\n                            \n                            \n                                resetGame\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:keydown\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(edge: IsOnEdge, rotate: TetromisRotation)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/board.component.ts:73\n                            \n                        \n\n                \n                    \n                            Creates an instance of BoardComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        edge\n                                                  \n                                                        \n                                                                        IsOnEdge\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rotate\n                                                  \n                                                        \n                                                                        TetromisRotation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:keydown\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:keydown(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.component.ts:52\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            animate\n                        \n                        \n                    \n                \n            \n            \n                \nanimate(now: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    now\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearLines\n                        \n                        \n                    \n                \n            \n            \n                \nclearLines()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.component.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            draw\n                        \n                        \n                    \n                \n            \n            \n                \ndraw()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.component.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drawBoard\n                        \n                        \n                    \n                \n            \n            \n                \ndrawBoard()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.component.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drop\n                        \n                        \n                    \n                \n            \n            \n                \ndrop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.component.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            freeze\n                        \n                        \n                    \n                \n            \n            \n                \nfreeze()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.component.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            gameOver\n                        \n                        \n                    \n                \n            \n            \n                \ngameOver()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.component.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmptyBoard\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmptyBoard()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.component.ts:242\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [][]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initBoard\n                        \n                        \n                    \n                \n            \n            \n                \ninitBoard()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.component.ts:99\n                \n            \n\n\n            \n                \n                    Initialisiert das Board\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initNext\n                        \n                        \n                    \n                \n            \n            \n                \ninitNext()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            play\n                        \n                        \n                    \n                \n            \n            \n                \nplay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetGame\n                        \n                        \n                    \n                \n            \n            \n                \nresetGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/board.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            board\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[][]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canvas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('board', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canvasNext\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('next', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ctx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CanvasRenderingContext2D\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ctxNext\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CanvasRenderingContext2D\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gameStarted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            highScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lines\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moves\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    [KEYS.LEFT]: (p: ITetromino): ITetromino => ({ ...p, x: p.x - 1 }),\n    [KEYS.RIGHT]: (p: ITetromino): ITetromino => ({ ...p, x: p.x + 1 }),\n    [KEYS.DOWN]: (p: ITetromino): ITetromino => ({ ...p, y: p.y + 1 }),\n    [KEYS.SPACE]: (p: ITetromino): ITetromino => ({ ...p, y: p.y + 1 }),\n    [KEYS.UP]: (p: ITetromino): ITetromino => this.rotate.rotate(p)\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            next\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Tetromino\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paused\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            piece\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Tetromino\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            points\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/board.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef, OnInit, HostListener} from '@angular/core';\nimport { COLS, BLOCK_SIZE, ROWS, KEYS, FARBEN, FORMEN, PUNKTE, LEVEL, LINES_PER_LEVEL } from './constants';\nimport { Tetromino, ITetromino } from './tetromis.component';\nimport {IsOnEdge} from './edge.service';\nimport {TetromisRotation} from './rotate.service';\n\n/**\n *\n *\n * @export\n * @class BoardComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css']\n})\nexport class BoardComponent implements OnInit {\n  @ViewChild('board', { static: true })\n  canvas: ElementRef;\n  @ViewChild('next', { static: true })\n  canvasNext: ElementRef;\n  ctx: CanvasRenderingContext2D;\n  ctxNext: CanvasRenderingContext2D;\n  board: number[][];\n  piece: Tetromino;\n  next: Tetromino;\n  requestId: number;\n  paused: boolean;\n  gameStarted: boolean;\n  time: { start: number; elapsed: number; level: number };\n  points: number;\n  highScore: number;\n  lines: number;\n  level: number;\n  moves = {\n    [KEYS.LEFT]: (p: ITetromino): ITetromino => ({ ...p, x: p.x - 1 }),\n    [KEYS.RIGHT]: (p: ITetromino): ITetromino => ({ ...p, x: p.x + 1 }),\n    [KEYS.DOWN]: (p: ITetromino): ITetromino => ({ ...p, y: p.y + 1 }),\n    [KEYS.SPACE]: (p: ITetromino): ITetromino => ({ ...p, y: p.y + 1 }),\n    [KEYS.UP]: (p: ITetromino): ITetromino => this.rotate.rotate(p)\n  };\n\n  /**\n   *\n   *\n   * @param {KeyboardEvent} event\n   * @memberof BoardComponent\n   */\n  @HostListener('window:keydown', ['$event'])\n  keyEvent(event: KeyboardEvent) {\n    if (event.keyCode === KEYS.ESC) {\n      this.gameOver();\n    } else if (this.moves[event.keyCode]) {\n      event.preventDefault();\n      // Get new state\n      let p = this.moves[event.keyCode](this.piece);\n      if (event.keyCode === KEYS.SPACE) {\n        // Hard drop\n        while (this.edge.valid(p, this.board)) {\n          this.points += PUNKTE.HARD_DROP;\n          this.piece.move(p);\n          p = this.moves[KEYS.DOWN](this.piece);\n        }\n      } else if (this.edge.valid(p, this.board)) {\n        this.piece.move(p);\n        if (event.keyCode === KEYS.DOWN) {\n          this.points += PUNKTE.SOFT_DROP;\n        }\n      }\n    }\n  }\n\n  /**\n   *Creates an instance of BoardComponent.\n   * @param {IsOnEdge} edge\n   * @param {TetromisRotation} rotate\n   * @memberof BoardComponent\n   */\n  constructor(private edge: IsOnEdge, private rotate: TetromisRotation) {}\n\n  /**\n   *\n   *\n   * @memberof BoardComponent\n   */\n  ngOnInit() {\n    this.initBoard();\n    this.initNext();\n    this.resetGame();\n    this.highScore = 0;\n  }\n  /**\n   * Initialisiert das Board\n   *\n   * @memberof BoardComponent\n   */\n  initBoard() {\n    this.ctx = this.canvas.nativeElement.getContext('2d');\n\n    // Rechnet die Block grössen aus\n    this.ctx.canvas.width = COLS * BLOCK_SIZE;\n    this.ctx.canvas.height = ROWS * BLOCK_SIZE;\n\n    //Skaliert die alle Objekte\n    this.ctx.scale(BLOCK_SIZE, BLOCK_SIZE);\n  }\n\n  initNext() {\n    this.ctxNext = this.canvasNext.nativeElement.getContext('2d');\n\n    // Grösse von nächsten Blöcken ausrechnen\n    this.ctxNext.canvas.width = 4 * BLOCK_SIZE + 2;\n    this.ctxNext.canvas.height = 4 * BLOCK_SIZE;\n\n    this.ctxNext.scale(BLOCK_SIZE, BLOCK_SIZE);\n  }\n  //Button um das spiel zu starten\n  play() {\n    this.gameStarted = true;\n    this.resetGame();\n    this.next = new Tetromino(this.ctx);\n    this.piece = new Tetromino(this.ctx);\n    this.next.drawNext(this.ctxNext);\n    this.time.start = performance.now();\n\n    // Bei gleicher Request ID Animation abbrechen\n    if (this.requestId) {\n      cancelAnimationFrame(this.requestId);\n    }\n\n    this.animate();\n  }\n\n  // Spiel zurücksetzen\n  resetGame() {\n    this.points = 0;\n    this.lines = 0;\n    this.level = 0;\n    this.board = this.getEmptyBoard();\n    this.time = { start: 0, elapsed: 0, level: LEVEL[this.level] };\n    this.paused = false;\n  }\n  \n  //Animationsloop der dropbewegung\n  animate(now = 0) {\n    this.time.elapsed = now - this.time.start;\n    if (this.time.elapsed > this.time.level) {\n      this.time.start = now;\n      if (!this.drop()) {\n        this.gameOver();\n        return;\n      }\n    }\n    this.draw();\n    this.requestId = requestAnimationFrame(this.animate.bind(this));\n  }\n\n  //Zeichnen der Blöcke\n  draw() {\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.piece.draw();\n    this.drawBoard();\n  }\n\n  //Zeichnen des Boardes\n  drawBoard() {\n    this.board.forEach((row, y) => {\n      row.forEach((value, x) => {\n        if (value > 0) {\n          this.ctx.fillStyle = FARBEN[value];\n          this.ctx.fillRect(x, y, 1, 1);\n        }\n      });\n    });\n  }\n\n  //Abwärts bewegung\n  drop(): boolean {\n    let p = this.moves[KEYS.DOWN](this.piece);\n    if (this.edge.valid(p, this.board)) {\n      this.piece.move(p);\n    } else {\n      this.freeze();\n      this.clearLines();\n      if (this.piece.y === 0) {\n        // Spiel beenden falls \"Dach\" erreicht\n        return false;\n      }\n      this.piece = this.next;\n      this.next = new Tetromino(this.ctx);\n      this.next.drawNext(this.ctxNext);\n    }\n    return true;\n  }\n  \n  //Bei 10 Blöcken neben einander die Linie Löschen und den Score erhöhen\n  clearLines() {\n    let lines = 0;\n    this.board.forEach((row, y) => {\n      if (row.every(value => value !== 0)) {\n        lines++;\n        this.board.splice(y, 1);\n        this.board.unshift(Array(COLS).fill(0));\n      }\n    });\n    if (lines > 0) {\n      this.points += this.edge.getLinesClearedPoints(lines, this.level);\n      this.lines += lines;\n      if (this.lines >= LINES_PER_LEVEL) {\n        this.level++;\n        this.lines -= LINES_PER_LEVEL;\n        this.time.level = LEVEL[this.level];\n      }\n    }\n  }\n\n// Block einfrieren wenn unten angekommen\n  freeze() {\n    this.piece.shape.forEach((row, y) => {\n      row.forEach((value, x) => {\n        if (value > 0) {\n          this.board[y + this.piece.y][x + this.piece.x] = value;\n        }\n      });\n    });\n  }\n\n  // Spiel Verloren\n  gameOver() {\n    this.gameStarted = false;\n    cancelAnimationFrame(this.requestId);\n    this.ctx.fillStyle = 'black';\n    this.ctx.fillRect(1, 3, 8, 1.2);\n    this.ctx.font = '1px Arial';\n    this.ctx.fillStyle = 'red';\n    this.ctx.fillText('GAME OVER', 1.8, 4);\n  }\n\n  // Leeres Matrix board erstellen\n  getEmptyBoard(): number[][] {\n    return Array.from({ length: ROWS }, () => Array(COLS).fill(0));\n  }\n}\n\n    \n\n    \n        \n\n\n    \n    \n      \n        TETRIS\n        Score: {{ points }}\n        Lines: {{ lines }}\n        Level: {{ level }}\n        \n      \n      Play\n      beenden\n    \n  \n  \n  \n    \n\n    \n                \n                    ./board.component.css\n                \n                .grid {\n\n    margin-top: 5%;\n\n}\n\n.app-board {\n    border-style: solid;\n    border-color: white;\n    margin-left: 35%;\n}\n\n.right-column {\n\n    color: white;\n\n}\n\n.right-column {\n\n    float: right;\n    margin-right: 35%;\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      TETRIS        Score: {{ points }}        Lines: {{ lines }}        Level: {{ level }}                    Play      beenden          '\n    var COMPONENTS = [{'name': 'BoardComponent', 'selector': 'app-board'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITetromino.html":{"url":"interfaces/ITetromino.html","title":"interface - ITetromino","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITetromino\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/board/tetromis.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        color\n                                \n                                \n                                        shape\n                                \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shape\n                                    \n                                \n                                \n                                    \n                                        shape:     number[][]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[][]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FARBEN, FORMEN } from './constants';\n\nexport interface ITetromino {\n  x: number;\n  y: number;\n  color: string;\n  shape: number[][];\n}\n\nexport class Tetromino implements ITetromino {\n  x: number;\n  y: number;\n  color: string;\n  shape: number[][];\n\n  constructor(private ctx: CanvasRenderingContext2D) {\n    this.spawn();\n  }\n\n  spawn() {\n    const typeId = this.randomizeTetrominoType(FARBEN.length - 1);\n    this.shape = FORMEN[typeId];\n    this.color = FARBEN[typeId];\n    this.x = typeId === 4 ? 4 : 3;\n    this.y = 0;\n  }\n\n  draw() {\n    this.ctx.fillStyle = this.color;\n    this.shape.forEach((row, y) => {\n      row.forEach((value, x) => {\n        if (value > 0) {\n          this.ctx.fillRect(this.x + x, this.y + y, 1, 1);\n        }\n      });\n    });\n  }\n\n  drawNext(ctxNext: CanvasRenderingContext2D) {\n    ctxNext.clearRect(0, 0, ctxNext.canvas.width, ctxNext.canvas.height);\n    ctxNext.fillStyle = this.color;\n    this.shape.forEach((row, y) => {\n      row.forEach((value, x) => {\n        if (value > 0) {\n          ctxNext.fillRect(x, y, 1, 1);\n        }\n      });\n    });\n  }\n\n  move(p: ITetromino) {\n    this.x = p.x;\n    this.y = p.y;\n    this.shape = p.shape;\n  }\n\n  randomizeTetrominoType(noOfTypes: number): number {\n    return Math.floor(Math.random() * noOfTypes + 1);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IsOnEdge.html":{"url":"injectables/IsOnEdge.html","title":"injectable - IsOnEdge","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IsOnEdge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/board/edge.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                aboveFloor\n                            \n                            \n                                getLinesClearedPoints\n                            \n                            \n                                insideWalls\n                            \n                            \n                                isEmpty\n                            \n                            \n                                notOccupied\n                            \n                            \n                                valid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            aboveFloor\n                        \n                        \n                    \n                \n            \n            \n                \naboveFloor(y: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/edge.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLinesClearedPoints\n                        \n                        \n                    \n                \n            \n            \n                \ngetLinesClearedPoints(lines: number, level: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/edge.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lines\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    level\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insideWalls\n                        \n                        \n                    \n                \n            \n            \n                \ninsideWalls(x: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/edge.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisEmpty(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/edge.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            notOccupied\n                        \n                        \n                    \n                \n            \n            \n                \nnotOccupied(board: number[][], x: number, y: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/edge.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    board\n                                    \n                                            number[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valid\n                        \n                        \n                    \n                \n            \n            \n                \nvalid(p: ITetromino, board: number[][])\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/edge.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    p\n                                    \n                                                ITetromino\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    board\n                                    \n                                            number[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ITetromino } from './tetromis.component';\nimport { COLS, ROWS, PUNKTE } from './constants';\n\n@Injectable({\n  providedIn: 'root'\n})\n//Klasse validiert das sich der Block an einem legalen ort bewegt.\nexport class IsOnEdge {\n  valid(p: ITetromino, board: number[][]): boolean {\n    return p.shape.every((row, dy) => {\n      return row.every((value, dx) => {\n        let x = p.x + dx;\n        let y = p.y + dy;\n        return (\n          this.isEmpty(value) ||\n          (this.insideWalls(x) &&\n            this.aboveFloor(y) &&\n            this.notOccupied(board, x, y))\n        );\n      });\n    });\n  }\n\n  isEmpty(value: number): boolean {\n    return value === 0;\n  }\n//Hilfsmethode in einer Wand\n  insideWalls(x: number): boolean {\n    return x >= 0 && x \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KEYS.html":{"url":"classes/KEYS.html","title":"class - KEYS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KEYS\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/board/constants.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                DOWN\n                            \n                            \n                                    Static\n                                    Readonly\n                                ESC\n                            \n                            \n                                    Static\n                                    Readonly\n                                LEFT\n                            \n                            \n                                    Static\n                                    Readonly\n                                RIGHT\n                            \n                            \n                                    Static\n                                    Readonly\n                                SPACE\n                            \n                            \n                                    Static\n                                    Readonly\n                                UP\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            DOWN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 40\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            ESC\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 27\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            LEFT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 37\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            RIGHT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 39\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            SPACE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 32\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            UP\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 38\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export const FARBEN = [\n    'none',\n    'cyan',\n    'blue',\n    'orange',\n    'yellow',\n    'green',\n    'purple',\n    'red'\n  ];\n  export const FORMEN = [\n    [],\n    [[0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0]],\n    [[2, 0, 0], [2, 2, 2], [0, 0, 0]],\n    [[0, 0, 3], [3, 3, 3], [0, 0, 0]],\n    [[4, 4], [4, 4]],\n    [[0, 5, 5], [5, 5, 0], [0, 0, 0]],\n    [[0, 6, 0], [6, 6, 6], [0, 0, 0]],\n    [[7, 7, 0], [0, 7, 7], [0, 0, 0]]\n  ];\nexport const COLS = 10;\nexport const ROWS = 20;\nexport const BLOCK_SIZE = 30;\nexport const LINES_PER_LEVEL = 10;\n\nexport class KEYS {\n    static readonly ESC = 27;\n    static readonly SPACE = 32;\n    static readonly LEFT = 37;\n    static readonly UP = 38;\n    static readonly RIGHT = 39;\n    static readonly DOWN = 40;\n  }\n\n  export class PUNKTE {\n    static readonly SINGLE = 100;\n    static readonly DOUBLE = 300;\n    static readonly TRIPLE = 500;\n    static readonly TETRIS = 800;\n    static readonly SOFT_DROP = 1;\n    static readonly HARD_DROP = 2;\n  }\n\n  export class LEVEL {\n    static readonly 0 = 800;\n    static readonly 1 = 720;\n    static readonly 2 = 630;\n    static readonly 3 = 550;\n    static readonly 4 = 470;\n    static readonly 5 = 380;\n    static readonly 6 = 300;\n    static readonly 7 = 220;\n    static readonly 8 = 130;\n    static readonly 9 = 100;\n    static readonly 10 = 80;\n    static readonly 11 = 80;\n    static readonly 12 = 80;\n    static readonly 13 = 70;\n    static readonly 14 = 70;\n    static readonly 15 = 70;\n    static readonly 16 = 50;\n    static readonly 17 = 50;\n    static readonly 18 = 50;\n    static readonly 19 = 30;\n    static readonly 20 = 30;\n    // 29+ is 20ms\n  }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LEVEL.html":{"url":"classes/LEVEL.html","title":"class - LEVEL","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LEVEL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/board/constants.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                0\n                            \n                            \n                                    Static\n                                    Readonly\n                                1\n                            \n                            \n                                    Static\n                                    Readonly\n                                10\n                            \n                            \n                                    Static\n                                    Readonly\n                                11\n                            \n                            \n                                    Static\n                                    Readonly\n                                12\n                            \n                            \n                                    Static\n                                    Readonly\n                                13\n                            \n                            \n                                    Static\n                                    Readonly\n                                14\n                            \n                            \n                                    Static\n                                    Readonly\n                                15\n                            \n                            \n                                    Static\n                                    Readonly\n                                16\n                            \n                            \n                                    Static\n                                    Readonly\n                                17\n                            \n                            \n                                    Static\n                                    Readonly\n                                18\n                            \n                            \n                                    Static\n                                    Readonly\n                                19\n                            \n                            \n                                    Static\n                                    Readonly\n                                2\n                            \n                            \n                                    Static\n                                    Readonly\n                                20\n                            \n                            \n                                    Static\n                                    Readonly\n                                3\n                            \n                            \n                                    Static\n                                    Readonly\n                                4\n                            \n                            \n                                    Static\n                                    Readonly\n                                5\n                            \n                            \n                                    Static\n                                    Readonly\n                                6\n                            \n                            \n                                    Static\n                                    Readonly\n                                7\n                            \n                            \n                                    Static\n                                    Readonly\n                                8\n                            \n                            \n                                    Static\n                                    Readonly\n                                9\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            0\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 800\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 720\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            10\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 80\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            11\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 80\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            12\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 80\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            13\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 70\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            14\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 70\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            15\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 70\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            16\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            17\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            18\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            19\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 30\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 630\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            20\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 30\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 550\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            4\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 470\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            5\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 380\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            6\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            7\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 220\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            8\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 130\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            9\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export const FARBEN = [\n    'none',\n    'cyan',\n    'blue',\n    'orange',\n    'yellow',\n    'green',\n    'purple',\n    'red'\n  ];\n  export const FORMEN = [\n    [],\n    [[0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0]],\n    [[2, 0, 0], [2, 2, 2], [0, 0, 0]],\n    [[0, 0, 3], [3, 3, 3], [0, 0, 0]],\n    [[4, 4], [4, 4]],\n    [[0, 5, 5], [5, 5, 0], [0, 0, 0]],\n    [[0, 6, 0], [6, 6, 6], [0, 0, 0]],\n    [[7, 7, 0], [0, 7, 7], [0, 0, 0]]\n  ];\nexport const COLS = 10;\nexport const ROWS = 20;\nexport const BLOCK_SIZE = 30;\nexport const LINES_PER_LEVEL = 10;\n\nexport class KEYS {\n    static readonly ESC = 27;\n    static readonly SPACE = 32;\n    static readonly LEFT = 37;\n    static readonly UP = 38;\n    static readonly RIGHT = 39;\n    static readonly DOWN = 40;\n  }\n\n  export class PUNKTE {\n    static readonly SINGLE = 100;\n    static readonly DOUBLE = 300;\n    static readonly TRIPLE = 500;\n    static readonly TETRIS = 800;\n    static readonly SOFT_DROP = 1;\n    static readonly HARD_DROP = 2;\n  }\n\n  export class LEVEL {\n    static readonly 0 = 800;\n    static readonly 1 = 720;\n    static readonly 2 = 630;\n    static readonly 3 = 550;\n    static readonly 4 = 470;\n    static readonly 5 = 380;\n    static readonly 6 = 300;\n    static readonly 7 = 220;\n    static readonly 8 = 130;\n    static readonly 9 = 100;\n    static readonly 10 = 80;\n    static readonly 11 = 80;\n    static readonly 12 = 80;\n    static readonly 13 = 70;\n    static readonly 14 = 70;\n    static readonly 15 = 70;\n    static readonly 16 = 50;\n    static readonly 17 = 50;\n    static readonly 18 = 50;\n    static readonly 19 = 30;\n    static readonly 20 = 30;\n    // 29+ is 20ms\n  }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PUNKTE.html":{"url":"classes/PUNKTE.html","title":"class - PUNKTE","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PUNKTE\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/board/constants.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                DOUBLE\n                            \n                            \n                                    Static\n                                    Readonly\n                                HARD_DROP\n                            \n                            \n                                    Static\n                                    Readonly\n                                SINGLE\n                            \n                            \n                                    Static\n                                    Readonly\n                                SOFT_DROP\n                            \n                            \n                                    Static\n                                    Readonly\n                                TETRIS\n                            \n                            \n                                    Static\n                                    Readonly\n                                TRIPLE\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            DOUBLE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            HARD_DROP\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            SINGLE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            SOFT_DROP\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            TETRIS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 800\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            TRIPLE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 500\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/constants.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export const FARBEN = [\n    'none',\n    'cyan',\n    'blue',\n    'orange',\n    'yellow',\n    'green',\n    'purple',\n    'red'\n  ];\n  export const FORMEN = [\n    [],\n    [[0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0]],\n    [[2, 0, 0], [2, 2, 2], [0, 0, 0]],\n    [[0, 0, 3], [3, 3, 3], [0, 0, 0]],\n    [[4, 4], [4, 4]],\n    [[0, 5, 5], [5, 5, 0], [0, 0, 0]],\n    [[0, 6, 0], [6, 6, 6], [0, 0, 0]],\n    [[7, 7, 0], [0, 7, 7], [0, 0, 0]]\n  ];\nexport const COLS = 10;\nexport const ROWS = 20;\nexport const BLOCK_SIZE = 30;\nexport const LINES_PER_LEVEL = 10;\n\nexport class KEYS {\n    static readonly ESC = 27;\n    static readonly SPACE = 32;\n    static readonly LEFT = 37;\n    static readonly UP = 38;\n    static readonly RIGHT = 39;\n    static readonly DOWN = 40;\n  }\n\n  export class PUNKTE {\n    static readonly SINGLE = 100;\n    static readonly DOUBLE = 300;\n    static readonly TRIPLE = 500;\n    static readonly TETRIS = 800;\n    static readonly SOFT_DROP = 1;\n    static readonly HARD_DROP = 2;\n  }\n\n  export class LEVEL {\n    static readonly 0 = 800;\n    static readonly 1 = 720;\n    static readonly 2 = 630;\n    static readonly 3 = 550;\n    static readonly 4 = 470;\n    static readonly 5 = 380;\n    static readonly 6 = 300;\n    static readonly 7 = 220;\n    static readonly 8 = 130;\n    static readonly 9 = 100;\n    static readonly 10 = 80;\n    static readonly 11 = 80;\n    static readonly 12 = 80;\n    static readonly 13 = 70;\n    static readonly 14 = 70;\n    static readonly 15 = 70;\n    static readonly 16 = 50;\n    static readonly 17 = 50;\n    static readonly 18 = 50;\n    static readonly 19 = 30;\n    static readonly 20 = 30;\n    // 29+ is 20ms\n  }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tetromino.html":{"url":"classes/Tetromino.html","title":"class - Tetromino","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tetromino\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/board/tetromis.component.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ITetromino\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                shape\n                            \n                            \n                                x\n                            \n                            \n                                y\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                draw\n                            \n                            \n                                drawNext\n                            \n                            \n                                move\n                            \n                            \n                                randomizeTetrominoType\n                            \n                            \n                                spawn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ctx: CanvasRenderingContext2D)\n                    \n                \n                        \n                            \n                                Defined in src/app/board/tetromis.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ctx\n                                                  \n                                                        \n                                                                    CanvasRenderingContext2D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tetromis.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shape\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[][]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tetromis.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            x\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tetromis.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/board/tetromis.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            draw\n                        \n                        \n                    \n                \n            \n            \n                \ndraw()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tetromis.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drawNext\n                        \n                        \n                    \n                \n            \n            \n                \ndrawNext(ctxNext: CanvasRenderingContext2D)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tetromis.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctxNext\n                                    \n                                            CanvasRenderingContext2D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            move\n                        \n                        \n                    \n                \n            \n            \n                \nmove(p: ITetromino)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tetromis.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    p\n                                    \n                                                ITetromino\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            randomizeTetrominoType\n                        \n                        \n                    \n                \n            \n            \n                \nrandomizeTetrominoType(noOfTypes: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tetromis.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    noOfTypes\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            spawn\n                        \n                        \n                    \n                \n            \n            \n                \nspawn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/tetromis.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FARBEN, FORMEN } from './constants';\n\nexport interface ITetromino {\n  x: number;\n  y: number;\n  color: string;\n  shape: number[][];\n}\n\nexport class Tetromino implements ITetromino {\n  x: number;\n  y: number;\n  color: string;\n  shape: number[][];\n\n  constructor(private ctx: CanvasRenderingContext2D) {\n    this.spawn();\n  }\n\n  spawn() {\n    const typeId = this.randomizeTetrominoType(FARBEN.length - 1);\n    this.shape = FORMEN[typeId];\n    this.color = FARBEN[typeId];\n    this.x = typeId === 4 ? 4 : 3;\n    this.y = 0;\n  }\n\n  draw() {\n    this.ctx.fillStyle = this.color;\n    this.shape.forEach((row, y) => {\n      row.forEach((value, x) => {\n        if (value > 0) {\n          this.ctx.fillRect(this.x + x, this.y + y, 1, 1);\n        }\n      });\n    });\n  }\n\n  drawNext(ctxNext: CanvasRenderingContext2D) {\n    ctxNext.clearRect(0, 0, ctxNext.canvas.width, ctxNext.canvas.height);\n    ctxNext.fillStyle = this.color;\n    this.shape.forEach((row, y) => {\n      row.forEach((value, x) => {\n        if (value > 0) {\n          ctxNext.fillRect(x, y, 1, 1);\n        }\n      });\n    });\n  }\n\n  move(p: ITetromino) {\n    this.x = p.x;\n    this.y = p.y;\n    this.shape = p.shape;\n  }\n\n  randomizeTetrominoType(noOfTypes: number): number {\n    return Math.floor(Math.random() * noOfTypes + 1);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TetromisRotation.html":{"url":"injectables/TetromisRotation.html","title":"injectable - TetromisRotation","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TetromisRotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/board/rotate.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                rotate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rotate\n                        \n                        \n                    \n                \n            \n            \n                \nrotate(piece: ITetromino)\n                \n            \n\n\n            \n                \n                    Defined in src/app/board/rotate.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    piece\n                                    \n                                                ITetromino\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ITetromino\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ITetromino } from './tetromis.component';\nimport { COLS, ROWS, PUNKTE } from './constants';\n\n@Injectable({\n    providedIn: 'root'\n  })\n  //klasse ermöglicht als Service, dass Rotieren der Blöcke.\n  export class TetromisRotation {\n\n    rotate(piece: ITetromino): ITetromino {\n        let p: ITetromino = JSON.parse(JSON.stringify(piece));\n        for (let y = 0; y  row.reverse());\n        return p;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/board/board.component.ts\n            \n            component\n            BoardComponent\n            \n                6 %\n                (2/32)\n            \n        \n        \n            \n                \n                src/app/board/constants.ts\n            \n            class\n            KEYS\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/board/constants.ts\n            \n            class\n            LEVEL\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/board/constants.ts\n            \n            class\n            PUNKTE\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/board/constants.ts\n            \n            variable\n            BLOCK_SIZE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/board/constants.ts\n            \n            variable\n            COLS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/board/constants.ts\n            \n            variable\n            FARBEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/board/constants.ts\n            \n            variable\n            FORMEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/board/constants.ts\n            \n            variable\n            LINES_PER_LEVEL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/board/constants.ts\n            \n            variable\n            ROWS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/board/edge.service.ts\n            \n            injectable\n            IsOnEdge\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/board/rotate.service.ts\n            \n            injectable\n            TetromisRotation\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/board/tetromis.component.ts\n            \n            class\n            Tetromino\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/board/tetromis.component.ts\n            \n            interface\n            ITetromino\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.2.14\n        \n            @angular/common : ~8.2.14\n        \n            @angular/compiler : ~8.2.14\n        \n            @angular/core : ~8.2.14\n        \n            @angular/forms : ~8.2.14\n        \n            @angular/platform-browser : ~8.2.14\n        \n            @angular/platform-browser-dynamic : ~8.2.14\n        \n            @angular/router : ~8.2.14\n        \n            bootstrap : ^4.4.1\n        \n            rxjs : ~6.4.0\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngularTetris\nThis project was generated with Angular CLI version 8.3.20.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BLOCK_SIZE   (src/.../constants.ts)\n                        \n                        \n                            COLS   (src/.../constants.ts)\n                        \n                        \n                            FARBEN   (src/.../constants.ts)\n                        \n                        \n                            FORMEN   (src/.../constants.ts)\n                        \n                        \n                            LINES_PER_LEVEL   (src/.../constants.ts)\n                        \n                        \n                            ROWS   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/board/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BLOCK_SIZE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 30\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            COLS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FARBEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'none',\n    'cyan',\n    'blue',\n    'orange',\n    'yellow',\n    'green',\n    'purple',\n    'red'\n  ]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FORMEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    [],\n    [[0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0]],\n    [[2, 0, 0], [2, 2, 2], [0, 0, 0]],\n    [[0, 0, 3], [3, 3, 3], [0, 0, 0]],\n    [[4, 4], [4, 4]],\n    [[0, 5, 5], [5, 5, 0], [0, 0, 0]],\n    [[0, 6, 0], [6, 6, 6], [0, 0, 0]],\n    [[7, 7, 0], [0, 7, 7], [0, 0, 0]]\n  ]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LINES_PER_LEVEL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROWS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
